<!DOCTYPE html>
<html lang="en">
  <head>
  <title>Solving Sol</title>
   <meta>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/addons/p5.sound.min.js"></script>
    
	<style type="text/css" href="style.css">
	html, body {
  margin: 0;
  padding: 0;
}
canvas {
  display: block;
}
	</style>
	</meta>
    <meta charset="utf-8" />

  </head>
  <body>
    <script>
	

	/*
The following project is a recreation inspired by Sol LeWitt's 1 of 8 Color Bands. Which is a series of 8 drawings composed by a master printmaker; off of LeWitt's instructions. 

https://americanart.si.edu/artwork/color-bands-78775

Made by Anna Chervinsky

*/

s1 = 24; // border stroke
s2 = 16; // lines down stroke
s3 = 15; // diagnal lines stroke
s4 = 18; // arc stroke

function setup() {
  angleMode(DEGREES);
  createCanvas(windowWidth, windowHeight);
  // createCanvas(700, 700);
  x = width;
  y = height;
}

function draw() {
  background(220);
  s1 = (24 * x) / 700 ;
  s2 = (16 * x) / 700 + 2;
  s3 = (15 * x) / 700 + 6;
  s4 = (18 * x) / 700 + 9;

  arks();

  linesdown();

  linesdiag();

  blackoutlines();
}

function blackoutlines() {
  noFill();
  stroke("black");
  strokeWeight(s1);
  rectMode(CENTER);
  rect(x / 2, y / 2, x - 12, y - 12);
  //  rect x,y,         width,  height

  triangle(0, y, x / 2, y / 2, x, y);
  //tri    bot left, middle,      bot right
  line(x / 2, y / 2, x / 2, 0);
}

function linesdown() {
  strokeWeight(s2);
  Red();
  line((x * 151.5) / 156, 0, (x * 151.5) / 156, ((y + 5) * 60) / 64);

  Blue();
  line((x * 147.7) / 156, 0, (x * 147.7) / 156, ((y + 5) * 59) / 64);

  Purple();
  line((x * 144) / 156, 0, (x * 144) / 156, ((y + 5) * 58) / 64);

  Yellow();
  line((x * 140.5) / 156, 0, (x * 140.5) / 156, ((y + 5) * 56) / 64);

  Green();
  line((x * 137.2) / 156, 0, (x * 137.2) / 156, ((y + 5) * 55) / 64);

  Orange();
  line((x * 133.3) / 156, 0, (x * 133.3) / 156, ((y + 5) * 53.5) / 64);

  Red();
  line((x * 129.5) / 156, 0, (x * 129.5) / 156, ((y + 5) * 52.5) / 64);

  Yellow();
  line((x * 126) / 156, 0, (x * 126) / 156, ((y + 5) * 50.5) / 64);

  Blue();
  line((x * 122.5) / 156, 0, (x * 122.5) / 156, ((y + 5) * 49) / 64);

  Purple();
  line((x * 119) / 156, 0, (x * 119) / 156, ((y + 5) * 47.5) / 64);

  // midway point ish?

  Red();
  line((x * 115.5) / 156, 0, (x * 115.5) / 156, ((y + 5) * 46) / 64);

  Orange();
  line((x * 112) / 156, 0, (x * 112) / 156, ((y + 5) * 45) / 64);

  Green();
  line((x * 109) / 156, 0, (x * 109) / 156, ((y + 5) * 43.5) / 64);

  Yellow();
  line((x * 106) / 156, 0, (x * 106) / 156, ((y + 5) * 42) / 64);

  Red();
  line((x * 103) / 156, 0, (x * 103) / 156, ((y + 5) * 41) / 64);

  Orange();
  line((x * 100) / 156, 0, (x * 100) / 156, ((y + 11) * 39.5) / 64);

  Blue();
  line((x * 97) / 156, 0, (x * 97) / 156, ((y + 11) * 38) / 64);

  Purple();
  line((x * 94) / 156, 0, (x * 94) / 156, ((y + 5) * 37.5) / 64);

  Green();
  line((x * 91) / 156, 0, (x * 91) / 156, ((y + 5) * 36) / 64);

  Yellow();
  line((x * 88) / 156, 0, (x * 88) / 156, ((y + 11) * 35) / 64);

  Blue();
  line((x * 84.5) / 156, 0, (x * 84.5) / 156, ((y + 11) * 16.5) / 32);

  Orange();
  line((x * 81) / 156, 0, (x * 81) / 156, (y + 11) / 2);
}

function linesdiag() {
  strokeWeight(s3);

  //66, 33 lines including black
  Yellow();
  line(-5, (y * 64.5) / 66, x / 2 - 5, (y * 31.5) / 66);

  //       left          right

  Green();
  line(-5, (y * 62.5) / 66, x / 2 - 5, (y * 29.5) / 66);

  Purple();
  line(-5, (y * 60.5) / 66, x / 2 - 5, (y * 27.5) / 66);

  Blue();
  line(-5, (y * 58.5) / 66, x / 2 - 5, (y * 25.5) / 66);

  Orange();
  line(-5, (y * 56.5) / 66, x / 2 - 5, (y * 23.5) / 66);

  Purple();
  line(-5, (y * 54.5) / 66, x / 2 - 5, (y * 21.5) / 66);

  Red();
  line(-5, (y * 52.5) / 66, x / 2 - 5, (y * 19.5) / 66);

  Green();
  line(-5, (y * 50.5) / 66, x / 2 - 5, (y * 17.5) / 66);

  Yellow();
  line(-5, (y * 48.5) / 66, x / 2 - 5, (y * 15.5) / 66);

  Purple();
  line(-5, (y * 46.5) / 66, x / 2 - 5, (y * 13.5) / 66);

  Orange();
  line(-5, (y * 44.5) / 66, x / 2 - 5, (y * 11.5) / 66);

  Red();
  line(-5, (y * 42.5) / 66, x / 2 - 5, (y * 9.5) / 66);

  Blue();
  line(-5, (y * 40.5) / 66, x / 2 - 5, (y * 7.5) / 66);

  Green();
  line(-5, (y * 38.5) / 66, x / 2 - 5, (y * 5.5) / 66);

  Yellow();
  line(-5, (y * 36.5) / 66, x / 2 - 5, (y * 3.5) / 66);

  Red(); // needs to hit the corner
  line(-5, (y * 34.5) / 66, x / 2 - 5, (y * 1.5) / 66);

  Purple(); //needs to hit the corner
  line(-5, (y * 32.5) / 66, x / 2 - 5, (y * -0.5) / 66);

  Orange();
  line(-5, (y * 30.5) / 66, x / 2 - 5, (y * -2.5) / 66);

  Blue();
  line(-5, (y * 28.5) / 66, x / 2 - 5, (y * -4.5) / 66);

  Purple();
  line(-5, (y * 26.5) / 66, x / 2 - 5, (y * -6.5) / 66);

  Green();
  line(-5, (y * 24.5) / 66, x / 2 - 5, (y * -8.5) / 66);

  Red();
  line(-5, (y * 22.5) / 66, x / 2 - 5, (y * -10.5) / 66);

  Yellow();
  line(-5, (y * 20.5) / 66, x / 2 - 5, (y * -12.5) / 66);

  Purple();
  line(-5, (y * 18.5) / 66, x / 2 - 5, (y * -14.5) / 66);

  Orange();
  line(-5, (y * 16.5) / 66, x / 2 - 5, (y * -16.5) / 66);

  Green();
  line(-5, (y * 14.5) / 66, x / 2 - 5, (y * -18.5) / 66);

  Blue();
  line(-5, (y * 12.5) / 66, x / 2 - 5, (y * -20.5) / 66);
  
  Purple();
  line(-5, (y * 10.5) / 66, x / 2 - 5, (y * -22.5) / 66);
  
  Red();
  line(-5, (y * 8.5) / 66, x / 2 - 5, (y * -24.5) / 66);
  
  Yellow();
  line(-5, (y * 6.5) / 66, x / 2 - 5, (y * -26.5) / 66);
  
  Blue();
  line(-5, (y * 4.5) / 66, x / 2 - 5, (y * -28.5) / 66);
  
  Orange();
  line(-5, (y * 2.5) / 66, x / 2 - 5, (y * -30.5) / 66);
}

function arks() {
  strokeWeight(s4);

  Green();
  arc(x / 2, y / 2, (x * 42.0) / 32, (y * 42.0) / 32, 0, 180);

  Orange();
  arc(x / 2, y / 2, (x * 40.7) / 32, (y * 40.7) / 32, 0, 180);

  Blue();
  arc(x / 2, y / 2, (x * 39.4) / 32, (y * 39.4) / 32, 0, 180);

  Red();
  arc(x / 2, y / 2, (x * 38.1) / 32, (y * 38.1) / 32, 0, 180);

  Purple();
  arc(x / 2, y / 2, (x * 36.8) / 32, (y * 36.8) / 32, 0, 180);

  Green();
  arc(x / 2, y / 2, (x * 35.5) / 32, (y * 35.5) / 32, 0, 180);

  Yellow();
  arc(x / 2, y / 2, (x * 34.2) / 32, (y * 34.2) / 32, 0, 180);

  Blue();
  arc(x / 2, y / 2, (x * 32.9) / 32, (y * 32.9) / 32, 0, 180);

  Orange();
  arc(x / 2, y / 2, (x * 31.6) / 32, (y * 31.6) / 32, 0, 180);

  Purple();
  arc(x / 2, y / 2, (x * 30.3) / 32, (y * 30.3) / 32, 15, 180);

  Green();
  arc(x / 2, y / 2, (x * 29) / 32, (y * 29) / 32, 15, 180);

  Yellow();
  arc(x / 2, y / 2, (x * 27.7) / 32, (y * 27.7) / 32, 15, 180);

  Red();
  arc(x / 2, y / 2, (x * 27.7) / 32, (y * 27.7) / 32, 15, 180);

  Purple();
  arc(x / 2, y / 2, (x * 26.4) / 32, (y * 26.4) / 32, 15, 180);
  Orange();
  arc(x / 2, y / 2, (x * 25.1) / 32, (y * 25.1) / 32, 15, 180);

  Green();
  arc(x / 2, y / 2, (x * 23.8) / 32, (y * 23.8) / 32, 15, 180);

  Blue();
  arc(x / 2, y / 2, (x * 22.5) / 32, (y * 22.5) / 32, 15, 180);

  Purple();
  arc(x / 2, y / 2, (x * 21.2) / 32, (y * 21.2) / 32, 15, 180);

  Yellow();
  arc(x / 2, y / 2, (x * 19.9) / 32, (y * 19.9) / 32, 15, 180);

  Orange();
  arc(x / 2, y / 2, (x * 18.6) / 32, (y * 18.6) / 32, 15, 180);

  Red();
  arc(x / 2, y / 2, (x * 17.3) / 32, (y * 17.3) / 32, 15, 180);

  Purple();
  arc(x / 2, y / 2, (x * 16) / 32, (y * 16) / 32, 15, 180);

  Blue();
  arc(x / 2, y / 2, (x * 14.7) / 32, (y * 14.7) / 32, 15, 180);

  Orange();
  arc(x / 2, y / 2, (x * 13.4) / 32, (y * 13.4) / 32, 15, 180);

  Red();
  arc(x / 2, y / 2, (x * 12.1) / 32, (y * 12.1) / 32, 15, 180);

  Yellow();
  arc(x / 2, y / 2, (x * 10.8) / 32, (y * 10.8) / 32, 15, 180);

  Purple();
  arc(x / 2, y / 2, (x * 9.5) / 32, (y * 9.5) / 32, 15, 180);

  Green();
  arc(x / 2, y / 2, (x * 8.2) / 32, (y * 8.2) / 32, 15, 180);

  Blue();
  arc(x / 2, y / 2, (x * 6.9) / 32, (y * 6.9) / 32, 15, 180);

  Orange();
  arc(x / 2, y / 2, (x * 5.6) / 32, (y * 5.6) / 32, 15, 180);

  Red();
  arc(x / 2, y / 2, (x * 4.0) / 32, (y * 4.0) / 32, 15, 180);

  Purple();
  arc(x / 2, (y - 1.5) / 2, (x * 2.5) / 32, (y * 2.5) / 32, 15, 180);
}

function Red() {
  stroke("#bf0001");
}
function Yellow() {
  stroke("#eabd00");
}
function Orange() {
  stroke("#eb4000");
}
function Green() {
  stroke("#1e7a13");
}
function Blue() {
  stroke("#07619d"); //blue
}
function Purple() {
  stroke("#40277f"); // dark purple
}

}

	</script>
  </body>
</html>
